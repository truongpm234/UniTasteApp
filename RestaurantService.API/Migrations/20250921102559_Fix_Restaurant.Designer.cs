// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantService.API.Data.DBContext;

#nullable disable

namespace RestaurantService.API.Migrations
{
    [DbContext(typeof(Exe201RestaurantServiceDbContext))]
    [Migration("20250921102559_Fix_Restaurant")]
    partial class Fix_Restaurant
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestaurantService.API.Models.Entity.BannerAd", b =>
                {
                    b.Property<int>("BannerAdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BannerAdId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("LinkUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("BannerAdId")
                        .HasName("PK__BannerAd__80CC01C9A4A9ADB5");

                    b.HasIndex("RestaurantId");

                    b.ToTable("BannerAd", (string)null);
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.BannerBooking", b =>
                {
                    b.Property<int>("BannerBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BannerBookingId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<int?>("BannerAdId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BannerBookingId")
                        .HasName("PK__BannerBo__1F3E2DADE2F0AACE");

                    b.HasIndex("RestaurantId");

                    b.ToTable("BannerBooking", (string)null);
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("SourceType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CategoryId")
                        .HasName("PK__Category__19093A0BB4B8408D");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.Feature", b =>
                {
                    b.Property<int>("FeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeatureId"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("FeatureId")
                        .HasName("PK__Feature__82230BC9E1B8A6F4");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Feature", (string)null);
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.OpeningHour", b =>
                {
                    b.Property<int>("OpeningHourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OpeningHourId"));

                    b.Property<TimeOnly?>("CloseTime")
                        .HasColumnType("time");

                    b.Property<int?>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<TimeOnly?>("OpenTime")
                        .HasColumnType("time");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("OpeningHourId")
                        .HasName("PK__OpeningH__F6C47B0D9899D16F");

                    b.HasIndex("RestaurantId");

                    b.ToTable("OpeningHour", (string)null);
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.PhotoReview", b =>
                {
                    b.Property<int>("PhotoReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhotoReviewId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("ReviewId")
                        .HasColumnType("int");

                    b.HasKey("PhotoReviewId")
                        .HasName("PK__PhotoRev__BFB6F5572F689529");

                    b.HasIndex("ReviewId");

                    b.ToTable("PhotoReview", (string)null);
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.PriceRange", b =>
                {
                    b.Property<int>("PriceRangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PriceRangeId"));

                    b.Property<decimal?>("MaxPrice")
                        .HasColumnType("money");

                    b.Property<decimal?>("MinPrice")
                        .HasColumnType("money");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PriceRangeId")
                        .HasName("PK__PriceRan__B8A301DF6BC41289");

                    b.ToTable("PriceRange", (string)null);
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantId"));

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CoverImageUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GooglePlaceId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("GoogleRating")
                        .HasColumnType("float");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OpeningHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PriceRangeId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Website")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("RestaurantId")
                        .HasName("PK__Restaura__87454C9555671854");

                    b.HasIndex("PriceRangeId");

                    b.ToTable("Restaurant", (string)null);
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.RestaurantCategory", b =>
                {
                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("RestaurantId", "CategoryId")
                        .HasName("PK__Restaura__26D5DF35CD295C23");

                    b.ToTable("RestaurantCategory", (string)null);
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.RestaurantFeature", b =>
                {
                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.HasKey("RestaurantId", "FeatureId")
                        .HasName("PK__Restaura__0F677C29EB222D66");

                    b.ToTable("RestaurantFeature", (string)null);
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ReviewId")
                        .HasName("PK__Reviews__74BC79CE0D4ED621");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.BannerAd", b =>
                {
                    b.HasOne("RestaurantService.API.Models.Entity.Restaurant", null)
                        .WithMany("BannerAds")
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.BannerBooking", b =>
                {
                    b.HasOne("RestaurantService.API.Models.Entity.Restaurant", null)
                        .WithMany("BannerBookings")
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.Category", b =>
                {
                    b.HasOne("RestaurantService.API.Models.Entity.Restaurant", null)
                        .WithMany("Categories")
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.Feature", b =>
                {
                    b.HasOne("RestaurantService.API.Models.Entity.Restaurant", null)
                        .WithMany("Features")
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.OpeningHour", b =>
                {
                    b.HasOne("RestaurantService.API.Models.Entity.Restaurant", null)
                        .WithMany("OpeningHoursNavigation")
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.PhotoReview", b =>
                {
                    b.HasOne("RestaurantService.API.Models.Entity.Review", "Review")
                        .WithMany("PhotoReviews")
                        .HasForeignKey("ReviewId")
                        .IsRequired()
                        .HasConstraintName("FK__PhotoRevi__Revie__4BAC3F29");

                    b.Navigation("Review");
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.Restaurant", b =>
                {
                    b.HasOne("RestaurantService.API.Models.Entity.PriceRange", "PriceRange")
                        .WithMany()
                        .HasForeignKey("PriceRangeId");

                    b.Navigation("PriceRange");
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.Review", b =>
                {
                    b.HasOne("RestaurantService.API.Models.Entity.Restaurant", "Restaurant")
                        .WithMany("Reviews")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.Restaurant", b =>
                {
                    b.Navigation("BannerAds");

                    b.Navigation("BannerBookings");

                    b.Navigation("Categories");

                    b.Navigation("Features");

                    b.Navigation("OpeningHoursNavigation");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("RestaurantService.API.Models.Entity.Review", b =>
                {
                    b.Navigation("PhotoReviews");
                });
#pragma warning restore 612, 618
        }
    }
}
