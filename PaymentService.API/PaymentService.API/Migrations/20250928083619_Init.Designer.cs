// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentService.API.Data.DBContext;

#nullable disable

namespace PaymentService.API.Migrations
{
    [DbContext(typeof(Exe201PaymentServiceDbContext))]
    [Migration("20250928083619_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PaymentService.API.Models.Entity.PaymentTransaction", b =>
                {
                    b.Property<int>("PaymentTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentTransactionId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrderCode")
                        .HasColumnType("bigint");

                    b.Property<string>("ReferenceId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PaymentTransactionId")
                        .HasName("PK__PaymentTransaction");

                    b.ToTable("PaymentTransaction", (string)null);
                });

            modelBuilder.Entity("PaymentService.API.Models.Entity.Purchase", b =>
                {
                    b.Property<int>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PurchaseType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PurchaseId")
                        .HasName("PK__Purchase");

                    b.ToTable("Purchase", (string)null);
                });

            modelBuilder.Entity("PaymentService.API.Models.Entity.UserMiniGamePlay", b =>
                {
                    b.Property<int>("UserMiniGamePlayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserMiniGamePlayId"));

                    b.Property<int?>("MiniGameId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PlayDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Result")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RewardVoucherId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserMiniGamePlayId")
                        .HasName("PK__UserMiniGamePlay");

                    b.HasIndex("RewardVoucherId");

                    b.ToTable("UserMiniGamePlay", (string)null);
                });

            modelBuilder.Entity("PaymentService.API.Models.Entity.UserVoucher", b =>
                {
                    b.Property<int>("UserVoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserVoucherId"));

                    b.Property<DateTime?>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int?>("MiniGamePlayId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UsedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("UserVoucherId")
                        .HasName("PK__UserVoucher");

                    b.HasIndex("VoucherId");

                    b.ToTable("UserVoucher", (string)null);
                });

            modelBuilder.Entity("PaymentService.API.Models.Entity.UserWallet", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("money");

                    b.HasKey("UserId")
                        .HasName("PK__UserWallet");

                    b.ToTable("UserWallet", (string)null);
                });

            modelBuilder.Entity("PaymentService.API.Models.Entity.Voucher", b =>
                {
                    b.Property<int>("VoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoucherId"));

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DiscountType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("DiscountValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("VoucherId");

                    b.ToTable("Voucher", (string)null);
                });

            modelBuilder.Entity("PaymentService.API.Models.Entity.UserMiniGamePlay", b =>
                {
                    b.HasOne("PaymentService.API.Models.Entity.Voucher", "RewardVoucher")
                        .WithMany("UserMiniGamePlays")
                        .HasForeignKey("RewardVoucherId")
                        .HasConstraintName("FK_UserMiniGamePlay_Voucher");

                    b.Navigation("RewardVoucher");
                });

            modelBuilder.Entity("PaymentService.API.Models.Entity.UserVoucher", b =>
                {
                    b.HasOne("PaymentService.API.Models.Entity.Voucher", "Voucher")
                        .WithMany("UserVouchers")
                        .HasForeignKey("VoucherId")
                        .HasConstraintName("FK_UserVoucher_Voucher");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("PaymentService.API.Models.Entity.Voucher", b =>
                {
                    b.Navigation("UserMiniGamePlays");

                    b.Navigation("UserVouchers");
                });
#pragma warning restore 612, 618
        }
    }
}
